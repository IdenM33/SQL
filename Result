1 Вывести сколько заказов было оформлено, и сколько в итоге получено. Не учитывать тестовые заказы.

SELECT CASE 
WHEN ClientOrderStateID = 1 THEN ‘Оформлен’
WHEN ClientOrderStateID = 2 THEN ‘Получен’ END AS OrderState,
COUNT(*) AS cnt
FROM Orders AS o
INNER JOIN AdditionalInfo AS a ON o.id = a.ClientOrderID
WHERE o.ClientOrderStateID != 3 AND a.code = ‘IsTestOrder’ AND a.value = ‘False’
  GROUP BY OrderState

2 Для каждой платформы и категории посчитать сколько было куплено товаров, сколько было получено заказов, GMV. Не учитывать тестовые заказы. Найти категорию, которая приносит наибольшую выручку.

SELECT CASE 
WHEN a.code = ‘platform’ THEN a.value END AS platform_value,
c.category,
SUM(CASE WHEN o.ClientOrderStateID = 1 THEN c.qty END) AS sum_qty ,
COUNT(DISTINCT (CASE WHEN o.ClientOrderStateID = 2 THEN o.id END)) AS delivered_orders,
SUM (CASE WHEN o.ClientOrderStateID = 1 THEN c.qty * c.price END) AS GMV
FROM Orders AS o
INNER JOIN AdditionalInfo AS a ON o.id = a.ClientOrderID
INNER JOIN ClientOrderItem AS c ON o.id = c.ClientOrderID
WHERE o.ClientOrderStateID != 3 AND a.code = ‘platform’ AND a.ClientOrderID NOT IN (
   SELECT ClientOrderID
   FROM AdditionalInfo
   WHERE code = ‘IsTestOrder’ AND a.value = ‘True’
) *
  GROUP BY  platform_value, c.category

* При условии, что в таблице AdditionalInfo для всех заказов указаны IsTestOrder и platform
SELECT c.category,
SUM (c.qty * c.price) AS GMV
FROM Orders AS o
INNER JOIN AdditionalInfo AS a ON o.id = a.ClientOrderID
INNER JOIN ClientOrderItem AS c ON o.id = c.ClientOrderID
WHERE o.ClientOrderStateID = 1 AND a.code = ‘platform’ AND a.ClientOrderID NOT IN (
   SELECT ClientOrderID
   FROM AdditionalInfo
   WHERE code = ‘IsTestOrder’ AND a.value = ‘True’
) *
  GROUP c.category
  ORDER BY GMV DESC
  LIMIT 1



3 Какой товар чаще других встречается в отмененных заказах. Тестовые заказы учитываются

SELECT c.ItemId, SUM(c.qty) as qty_cnt
FROM(
   SELECT c.ClientOrderID,
   c.ItemId, 
   c.qty
   FROM Orders AS o
   INNER JOIN AdditionalInfo AS a ON o.id = a.ClientOrderID
   INNER JOIN ClientOrderItem AS c ON o.id = c.ClientOrderID
   WHERE o.ClientOrderStateID = 3 AND a.code = ‘platform’  *
     GROUP BY c.ClientOrderID, c.ItemId, c.qty
)
  ORDER BY qty_cnt DESC
  LIMIT 1


4 Найдите среднее время между первым и вторым заказом у пользователей. Для решения запроса не используйте джойны. Тестовые заказы фильтровать не нужно. Берутся даты оформления заказов и не учитываются факты получения и отмены
SELECT AVG(datediff (days, first_order, second_order))
FROM(
   SELECT clientId,
   MIN(date) AS first_order,
   MAX(date) AS second_order
      FROM(
      SELECT date, 
      clientId,
      ROW_NUMBER() OVER (PARTITION BY clientId ORDER BY date) AS id_rank
      FROM Orders
      WHERE ClientOrderStateID = 1)
      WHERE id_rank <= 2
      GROUP BY clientId
)

